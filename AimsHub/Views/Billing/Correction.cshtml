@model BillingCorrectionViewModel
@using AimsHub.Models;
@using AimsHub.ViewModels
@using GridMvc.Html

@{
    ViewBag.Title = "Billing Correction";
    int totalHosp = Model.HospitalList.Count();
    int totalServ = Model.ServiceList.Count();
}
<style>
    tr.grid-empty-text {
        font-weight: bolder;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
        font-size: xx-large;
    }
</style>
<link href="~/Scripts/themes/flick/theme.css" rel="stylesheet" />
<link href="~/Content/AimsStyle.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script type="text/javascript">
    $(document).ready(function () {
        //Hide grid if no data
        //if ($('.grid-empty-text').length)
        //{
        //    $('.grid-mvc').hide();
        //}
        //This overrides a default styling in Gridmvc which causes the table to stretch outside of the page with no scrollbar
        $('.grid-header-title').css('margin-right', '0px');

        $('table tr').each(function () {
            var id = $(this).find('#hidID').val();
            var btn = $(this).find('[name=EditButton]');
            btn.click(function (e) {
                e.preventDefault;
                editPatientLoad(id);
                return false;
            })
        });
        
        $("#ThisGuy").dialog({
            autoOpen: false,
            resizable: true,
            draggable: true,
            title: "Select Hospitals",
            height: 'auto',
            width: 'auto',
            modal: false,
            position: { my: "top", at: "bottom", of: $('#SearchHospital') }
        });

        $("#PopupService").dialog({
            autoOpen: false,
            resizable: true,
            draggable: true,
            title: "Select Service Types",
            height: 'auto',
            width: '500px',
            modal: false,
            position: { my: "top", at: "bottom", of: $('#SearchServiceType') }
        });

        $("#Patient").dialog({
            autoOpen: false,
            resizable: true,
            draggable: true,
            title: "Edit Patient",
            height: 'auto',
            width: 'auto',
            modal: true,
            position: { my: "top", at: "top", of: $('.grid-mvc') }
        });

        var array = @Html.Raw(Json.Encode(Model.SelectedHospitals));
        var max = 0;
        for (i = 0; i < array.length; i++)
        {
            $('.hospcheck').each(function () {
                if (array[i] == $(this).val())
                {
                    $(this).prop('checked', true);
                    max++;
                }
            });
        }

        var hospmax = @totalHosp; //Literally did this because if I put it in the if statement VS thinks the syntax is wrong and I hate red squigglies
        if (max == hospmax || max == 0) {
            $('#chkhospAll').prop('checked', true);
            $('#SearchHospital').val("All");
        }
        else {
            $('#SearchHospital').val($('#hidHospital').val());
        }

        checkboxHiddenUpdate($('#hidHospitals'), 'hospcheck');

        var array = @Html.Raw(Json.Encode(Model.SelectedServices));
        var max = 0;
        for (i = 0; i < array.length; i++)
        {
            $('.servcheck').each(function () {
                if (array[i] == $(this).val())
                {
                    $(this).prop('checked', true);
                    max++;
                }
            });
        }

        var servmax = @totalServ; //Literally did this because if I put it in the if statement VS thinks the syntax is wrong and I hate red squigglies
        checkboxHiddenUpdate($('#hidServices'), 'servcheck');
        if (max == servmax || max == 0) {
            $('#chkservAll').prop('checked', true);
            $('#SearchServiceType').val("All");
        }
        else {
            $('#SearchServiceType').val($('#hidServices').val());
        }

    });

    function checkboxHiddenUpdate(hid, className) {
        var data = [];
        $('.' + className).each(function () {
            if (this.checked) {
                data.push(this.value);
            }
        });
        hid.val(data);
    }
    function toggleHosp(chk) {
        if (chk.checked) {
            var hosp = [];
            $('.hospcheck').each(function () {
                //this.checked = chk.checked;
                this.checked = '';
                hosp.push(this.value);
            });
            //checkboxHiddenUpdate($('#hidHospitals'), 'hospcheck'); //This is removed because otherwise all hospitals are submitted to the server and the query unnecessarily performs filtering
            $('#hidHospitals').val("");
            $('#SearchHospital').val("All");
        }
        else {
            $('.hospcheck').each(function () {
                this.checked = chk.checked;
            });
            checkboxHiddenUpdate($('#hidHospitals'), 'hospcheck');
            $('#SearchHospital').val($('#hidHospitals').val());
        }
    }
    function selectHosp() {
        $('#chkhospAll').prop('checked', false);
        checkboxHiddenUpdate($('#hidHospitals'), 'hospcheck');
        $('#SearchHospital').val($('#hidHospitals').val());
    }
    function toggleService(chk) {
        if (chk.checked) {
            var serv = [];
            $('.servcheck').each(function () {
                this.checked = chk.checked;
                serv.push(this.value);
            });
            //checkboxHiddenUpdate($('#hidServices'), 'servcheck');
            $('#hidServices').val("");
            $('#SearchServiceType').val("All");
        }
        else {
            $('.servcheck').each(function () {
                this.checked = chk.checked;
            });
            checkboxHiddenUpdate($('#hidServices'), 'servcheck');
            $('#SearchServiceType').val($('#hidServices').val());
        }
    }
    function selectService() {
        checkboxHiddenUpdate($('#hidServices'), 'servcheck');
        $('#SearchServiceType').val($('#hidServices').val());
    }
    function triggerSubmit() {
        $('[name=submit]').click();
    }
    function showPopupHospital() {
        $('#ThisGuy').dialog('open');
        closePopupService();
    }
    function showPopupService() {
        $('#PopupService').dialog('open');
        closePopupHospital();
    }
    function closePopupHospital() {
        $('#ThisGuy').dialog('close');
    }
    function closePopupService() {
        $('#PopupService').dialog('close');
    }
    function editPatientLoad(id)
    {
        var patient;
        $.getJSON('/Billing/jsonGetPatient',
            { patientID: id },
            function (result) {
                patient = result;
            });

        $('#PopupPhysician').val(patient.Physician);

        $('#Patient').dialog('open');
    }
    function createPatient() {
        $('#Patient').dialog('open');
    }
</script>

<div class="AIMSBanner">
    Billing Correction
</div>

@using (Html.BeginForm("Correction", "Billing", FormMethod.Post, new { id = "correctionForm" }))
{
    
    @Html.AntiForgeryToken()
        @*<span class="col-lg-offset-4">
            <span style="color:green">Total Records: @totalRecords</span>
        </span>*@
        <div>
            <a class="btn btn-primary btn-sm" id="CreatePopupButton" onclick="javascript:createPatient()" style="float: left; margin-bottom: 10px;">
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
                <span>Create A New Patient Record</span>
            </a>
        </div>
        <br />
    <span class="col-lg-12" style="background-color: royalblue; padding:8px; border-top-left-radius: 6px; border-top-right-radius: 6px;">
        <span class="col-lg-2">
            <span style="color: white; font-weight:bolder; white-space: nowrap; margin-right: 10px;">Patient Name: <input type="text" name="SearchPatientName" id="SearchPatientName" value="@Model.SearchPatientName" style="width: 200px; color: black;" /></span>
        </span>
        <span class="col-lg-2 col-lg-offset-2">
            <span style="color: white; font-weight:bolder; white-space: nowrap; margin-right: 10px;">Date: </span><input type="text" name="SearchServiceDate" id="SearchServiceDate" class="date-picker" value="@Model.SearchServiceDate" style="width: 100px; color: black;" />
        </span>
        <span class="col-lg-2">
            <span style="color: white; font-weight:bolder; white-space: nowrap; margin-right: 10px;">Hospital: <input type="text" name="SearchHospital" id="SearchHospital" onclick="javascript:showPopupHospital()" style="width: 80px; color: black;" /></span>
        </span>
        <span class="col-lg-1">
            <span style="color: white; font-weight:bolder;  white-space: nowrap; margin-right: 10px;">Type: <input type="text" name="SearchServiceType" id="SearchServiceType" onclick="javascript:showPopupService()" style="width: 80px; color: black;" /></span>
        </span>
        <span class="col-lg-2">
            <button type="submit" name="submit" class="btn btn-success btn-sm" value="Search" style="float: right;">
                Search <i class="glyphicon glyphicon-arrow-right"></i>
            </button>
        </span>
    </span>

    <input type="hidden" id="hidHospitals" name="hidHospitals" value="@Html.Raw(Json.Encode(Model.SelectedHospitals))" />
    <input type="hidden" id="hidServices" name="hidServices" value="@Html.Raw(Json.Encode(Model.SelectedServices))" />
    <div id="ThisGuy" style="display: none;">
        <span class="col-sm-12" style="overflow-y: auto;">
            <input type="checkbox" value="ALL" id="chkhospAll" onclick="javascript:toggleHosp(this)" /><strong>ALL</strong><br />
            @{foreach (SelectListItem hosp in Model.HospitalList)
                {
                    <input type="checkbox" class="hospcheck" onclick="javascript:selectHosp()" value="@hosp.Value" />@hosp.Text <br />
                }
            }
        </span>
        <input type="button" id="closePopupHospital" value="Close Popup" onclick="javascript:closePopupHospital();" />
    </div>
    <div id="PopupService" style="display: none;">
        <span class="col-sm-12" style="overflow-y: auto;">
            <input type="checkbox" value="ALL" id="chkservAll" onclick="javascript:toggleService(this)" /><strong>ALL</strong><br />
            @{foreach (SelectListItem serv in Model.ServiceList)
                {
                    <input type="checkbox" class="servcheck" onclick="javascript:selectService()" value="@serv.Value" />@serv.Text <br />
                }
            }
        </span>
        <input type="button" id="closePopupService" value="Close Popup" onclick="javascript:closePopupService();" />
    </div>

    <div style="width: 100%; height: 5px; background-color: mediumblue; overflow: hidden; margin-top: 15px; margin-bottom: 5px; border-bottom-left-radius: 6px; border-bottom-right-radius: 6px;"></div>
    <div id="Patient" style="display: none;">
        <div class="form-horizontal">
            <table>
                <tr>
                    <td>
                        <strong style="margin-top: 5px;">Patient Name: </strong>
                    </td>
                    <td>
                        <input type="text" id="PopupPatientName" class="form-control" style="float: left;" />
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Hospital: </strong>
                    </td>
                    <td>
                        <select class="form-control" id="PopupHospital">
                            @foreach (var item in Model.HospitalList)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Service Type: </strong>
                    </td>
                    <td>
                        <select class="form-control" id="PopupServiceType">
                            @foreach (var item in Model.ServiceList)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Service Date: </strong>
                    </td>
                    <td>
                        <input type="text" name="PopupServiceDate" id="PopupServiceDate" class="date-picker textdate" value="@DateTime.Now.ToShortDateString()" />
                    </td>
                </tr>
                <tr>
                    <td>

                    </td>
                    <td>

                    </td>
                </tr>
                <tr>
                    <td>

                    </td>
                    <td>

                    </td>
                </tr>
                <tr>
                    <td>

                    </td>
                    <td>

                    </td>
                </tr>
            </table>
        </div>

        @*<span class="col-sm-12">
            <span class="col-sm-3">
                <strong style="margin-top: 5px;">Patient Name: </strong>
            </span>
            <span >
                <input type="text" id="PopupPatientName" class="form-control" style="float: left;" />
            </span>
        </span>
        <span class="col-sm-2">
            <strong>Hospital: </strong>
        </span>
        <span class="col-sm-10">
            <select class="form-control" id="PopupHospital">
                @foreach (var item in Model.HospitalList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </span>
        <span class="col-sm-2">
            <strong>Service Type: </strong>
        </span>
        <span class="col-sm-10">
            <select class="form-control" id="PopupServiceType">
                @foreach (var item in Model.ServiceList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </span>
        <span class="col-sm-2">
            <strong>Service Date: </strong>
        </span>
        <span class="col-sm-10">
            <input type="text" name="PopupServiceDate" id="PopupServiceDate" class="date-picker textdate" value="@DateTime.Now.ToShortDateString()" />
        </span>
        <span class="col-sm-2">
            <strong>Physician: </strong>
        </span>
        <span class="col-sm-10">
            <select class="form-control" id="PopupPhysician">
                @foreach (var item in Model.PhysicianList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </span>
        <span class="col-sm-2">
            <strong>MRN_FIN: </strong>
        </span>
        <span class="col-sm-10">
            <input type="text" id="PopupMRN_FIN" class="form-control" style="float: left; width: 4em" />
        </span>
        <span class="col-sm-2">
            <strong>Gender: </strong>
        </span>
        <span class="col-sm-10">
            <select class="form-control" id="PopupGender">
                @foreach (var item in Model.GenderList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </span>
        <span class="col-sm-2">
            <strong>DOB: </strong>
        </span>
        <span class="col-sm-10">
            <input type="text" name="PopupServiceDate" id="PopupServiceDate" class="date-pickerDOB textdate" value="@DateTime.Now.ToShortDateString()" />
        </span>
        <span class="col-sm-2">
            <strong>PCP: </strong>
        </span>
        <span class="col-sm-10">
            <select class="form-control" id="PopupPCP">
                @foreach (var item in Model.PCPList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </span>
        <span class="col-sm-4">
            <a class="btn btn-success btn-sm" id="PopupSaveExisting" name="PopupSaveExisting">
                <span>Save</span>
                <span class="glyphicon glyphicon-save" aria-hidden="true"></span>
            </a>
            <a class="btn btn-success btn-sm" id="PopupCreateNew" name="PopupCreateNew">
                <span>Create</span>
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
            </a>
        </span>
        <span class="col-sm-4">
            <a class="btn btn-danger btn-sm" id="PopupDelete" name="PopupDelete">
                <span>Delete</span>
                <span class="glyphicon glyphicon-erase" aria-hidden="true"></span>
            </a>
        </span>
        <span class="col-sm-4">
            <a class="btn btn-sm" id="PopupDelete" name="PopupCancel" style="background-color: lightgrey; color: white; border: 1px solid red;">
                <span>Cancel Changes</span>
            </a>
        </span>*@
    </div>
    <div>
            @Html.Grid(Model.Patients).Columns(columns =>
   {
       columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(90)
        .Titled("Select")
        .RenderValueAs(c => @Html.Raw("<button class='btn btn-primary btn-sm' type='button' onclick='javascript:editPatientLoad(" + c.PLRecord + ")' name='EditButton' value='Edit'><span class='glyphicon glyphicon-pencil'></span> Edit</button>"));
       columns.Add(c => c.PLRecord, true).Titled("PLRecord").Sanitized(false).Encoded(false).RenderValueAs(c => Html.Hidden("hidID", c.PLRecord));
       columns.Add(c => c.PatientName).Titled("Patient Name").Sortable(true);
       columns.Add(c => c.Physician).Titled("Physician").Sortable(true);
       columns.Add(c => c.Hospital).Titled("Hospital").Sortable(true);
       columns.Add(c => c.PCP_Practice).Titled("PCP / Practice").Sortable(true);
       columns.Add(c => c.MRN_FIN).Titled("MRN").Sortable(true);
       columns.Add(c => c.ServiceType).Titled("Service Type").Sortable(true);
       columns.Add(c => c.viewNotesCompleted).Titled("Notes Done").Sortable(true).SetWidth(60);
       columns.Add(c => c.viewNotesCopied).Titled("Notes Copied").Sortable(true).SetWidth(60);
       columns.Add(c => c.viewFaceSheetEntered).Titled("FaceSheet").Sortable(true).SetWidth(60);
       columns.Add(c => c.viewCodingCompleted).Titled("Coding Done").Sortable(true).SetWidth(60);
       columns.Add(c => c.viewChargePosted).Titled("Charge Posted").Sortable(true).SetWidth(60);
   }).Selectable(false).Named("patientGrid").EmptyText("Please enter filter info and click Search to begin")
    </div>
}
